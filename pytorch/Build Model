{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyNYba3LhgQO2i9n0hoO/xEp"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"JcJDxXkRMfRR","executionInfo":{"status":"ok","timestamp":1703604132334,"user_tz":-60,"elapsed":9532,"user":{"displayName":"Mohsin mushtaq","userId":"02445327927298592193"}}},"outputs":[],"source":["import os\n","import torch\n","from torch import nn\n","from torch.utils.data import DataLoader\n","from torchvision import datasets, transforms"]},{"cell_type":"code","source":["device = (\n","    \"cuda\"\n","    if torch.cuda.is_available()\n","    else \"mps\"\n","    if torch.backends.mps.is_available()\n","    else \"cpu\"\n",")\n","print(f\"Using {device} device\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B2xeAq5aN2AL","executionInfo":{"status":"ok","timestamp":1703604132334,"user_tz":-60,"elapsed":13,"user":{"displayName":"Mohsin mushtaq","userId":"02445327927298592193"}},"outputId":"d2e52987-4a0a-4103-f999-6db5e6ff682f"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Using cuda device\n"]}]},{"cell_type":"code","source":["print(torch.cuda.is_available())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dxu3jHAfN3xl","executionInfo":{"status":"ok","timestamp":1703604132334,"user_tz":-60,"elapsed":10,"user":{"displayName":"Mohsin mushtaq","userId":"02445327927298592193"}},"outputId":"a90fb7ec-2130-42a2-d29c-4cc8f151c772"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n"]}]},{"cell_type":"code","source":["class NeuralNetwork(nn.Module):\n","    def __init__(self):\n","        super().__init__()\n","        self.flatten = nn.Flatten()\n","        self.linear_relu_stack = nn.Sequential(\n","            nn.Linear(28*28, 512),\n","            nn.ReLU(),\n","            nn.Linear(512, 512),\n","            nn.ReLU(),\n","            nn.Linear(512, 10),\n","        )\n","\n","    def forward(self, x):\n","        x = self.flatten(x)\n","        logits = self.linear_relu_stack(x)\n","        return logits"],"metadata":{"id":"0WEGVD-zOcNe","executionInfo":{"status":"ok","timestamp":1703604132334,"user_tz":-60,"elapsed":7,"user":{"displayName":"Mohsin mushtaq","userId":"02445327927298592193"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["model = NeuralNetwork().to(device)\n","print(model)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-i-MJiDs7EM0","executionInfo":{"status":"ok","timestamp":1703604133464,"user_tz":-60,"elapsed":1137,"user":{"displayName":"Mohsin mushtaq","userId":"02445327927298592193"}},"outputId":"fc839e02-76fc-4acc-eb08-a57667328dbe"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["NeuralNetwork(\n","  (flatten): Flatten(start_dim=1, end_dim=-1)\n","  (linear_relu_stack): Sequential(\n","    (0): Linear(in_features=784, out_features=512, bias=True)\n","    (1): ReLU()\n","    (2): Linear(in_features=512, out_features=512, bias=True)\n","    (3): ReLU()\n","    (4): Linear(in_features=512, out_features=10, bias=True)\n","  )\n",")\n"]}]},{"cell_type":"code","source":["X = torch.rand(1, 28, 28, device=device)\n","logits = model(X)\n","pred_probab = nn.Softmax(dim=1)(logits)\n","y_pred = pred_probab.argmax(1)\n","print(f\"Predicted class: {y_pred}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8gnboWNh7Fiw","executionInfo":{"status":"ok","timestamp":1703604134076,"user_tz":-60,"elapsed":620,"user":{"displayName":"Mohsin mushtaq","userId":"02445327927298592193"}},"outputId":"b012056c-0606-4f42-b231-b0893dc8affe"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Predicted class: tensor([5], device='cuda:0')\n"]}]},{"cell_type":"code","source":["print(pred_probab)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aARaK09i-rxM","executionInfo":{"status":"ok","timestamp":1703604134499,"user_tz":-60,"elapsed":432,"user":{"displayName":"Mohsin mushtaq","userId":"02445327927298592193"}},"outputId":"df228778-af70-47f1-8378-a3a744e80e9f"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([[0.0935, 0.0967, 0.0981, 0.1014, 0.0950, 0.1125, 0.1053, 0.0991, 0.1008,\n","         0.0977]], device='cuda:0', grad_fn=<SoftmaxBackward0>)\n"]}]},{"cell_type":"code","source":["input_image = torch.rand(3,28,28)\n","print(input_image.size())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2jX3f5G6_NN-","executionInfo":{"status":"ok","timestamp":1703604134500,"user_tz":-60,"elapsed":15,"user":{"displayName":"Mohsin mushtaq","userId":"02445327927298592193"}},"outputId":"1c40fa3e-b9d4-4ec1-8671-febf240e8edb"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["torch.Size([3, 28, 28])\n"]}]},{"cell_type":"code","source":["flatten = nn.Flatten()\n","flat_image = flatten(input_image)\n","print(flat_image.size())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QgsFZLGkt9de","executionInfo":{"status":"ok","timestamp":1703604195514,"user_tz":-60,"elapsed":517,"user":{"displayName":"Mohsin mushtaq","userId":"02445327927298592193"}},"outputId":"96825120-8743-46f3-d4d1-06f118ac0bcf"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["torch.Size([3, 784])\n"]}]},{"cell_type":"code","source":["layer1 = nn.Linear(in_features=28*28, out_features=20)\n","hidden1 = layer1(flat_image)\n","print(hidden1.size())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"20obb1-yuQtF","executionInfo":{"status":"ok","timestamp":1703604223061,"user_tz":-60,"elapsed":6,"user":{"displayName":"Mohsin mushtaq","userId":"02445327927298592193"}},"outputId":"2048a13a-5f6c-471f-a104-2a924f330068"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["torch.Size([3, 20])\n"]}]},{"cell_type":"code","source":["print(f\"Before ReLU: {hidden1}\\n\\n\")\n","hidden1 = nn.ReLU()(hidden1)\n","print(f\"After ReLU: {hidden1}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hKCNfP-UuXhP","executionInfo":{"status":"ok","timestamp":1703605055024,"user_tz":-60,"elapsed":16,"user":{"displayName":"Mohsin mushtaq","userId":"02445327927298592193"}},"outputId":"027c3d40-6056-4218-aa43-c4063b47d458"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Before ReLU: tensor([[-0.5724, -0.3049,  0.4080, -0.1103,  0.8380,  0.0456,  0.1853, -0.2845,\n","          0.0302, -0.6170, -0.0944,  0.2789, -0.0036, -0.5219,  0.4180,  0.1727,\n","          0.3387,  0.6560, -0.1904,  0.1032],\n","        [-0.5823, -0.2335, -0.2708, -0.3163,  0.4798, -0.2787,  0.1022, -0.1967,\n","          0.3439, -0.6736, -0.1551,  0.4569,  0.0209, -0.5979,  0.2698,  0.2310,\n","          0.3701,  0.2073, -0.1359,  0.0945],\n","        [-0.4177, -0.4180, -0.1594, -0.0597,  0.5868,  0.3860, -0.0957, -0.9760,\n","         -0.1587, -0.5161,  0.1938,  0.5090,  0.0493, -0.5666,  0.2898, -0.2535,\n","          0.5250,  0.7081, -0.5783,  0.4209]], grad_fn=<AddmmBackward0>)\n","\n","\n","After ReLU: tensor([[0.0000, 0.0000, 0.4080, 0.0000, 0.8380, 0.0456, 0.1853, 0.0000, 0.0302,\n","         0.0000, 0.0000, 0.2789, 0.0000, 0.0000, 0.4180, 0.1727, 0.3387, 0.6560,\n","         0.0000, 0.1032],\n","        [0.0000, 0.0000, 0.0000, 0.0000, 0.4798, 0.0000, 0.1022, 0.0000, 0.3439,\n","         0.0000, 0.0000, 0.4569, 0.0209, 0.0000, 0.2698, 0.2310, 0.3701, 0.2073,\n","         0.0000, 0.0945],\n","        [0.0000, 0.0000, 0.0000, 0.0000, 0.5868, 0.3860, 0.0000, 0.0000, 0.0000,\n","         0.0000, 0.1938, 0.5090, 0.0493, 0.0000, 0.2898, 0.0000, 0.5250, 0.7081,\n","         0.0000, 0.4209]], grad_fn=<ReluBackward0>)\n"]}]},{"cell_type":"code","source":["seq_modules = nn.Sequential(\n","    flatten,\n","    layer1,\n","    nn.ReLU(),\n","    nn.Linear(20, 10)\n",")\n","input_image = torch.rand(3,28,28)\n","logits = seq_modules(input_image)"],"metadata":{"id":"OhQV488rxisP","executionInfo":{"status":"ok","timestamp":1703605229466,"user_tz":-60,"elapsed":10,"user":{"displayName":"Mohsin mushtaq","userId":"02445327927298592193"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["print(logits.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OpVa-jzvyNKf","executionInfo":{"status":"ok","timestamp":1703605304543,"user_tz":-60,"elapsed":13,"user":{"displayName":"Mohsin mushtaq","userId":"02445327927298592193"}},"outputId":"678806e4-b4e5-483d-d61d-29e6383fb247"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["torch.Size([3, 10])\n"]}]},{"cell_type":"code","source":["softmax = nn.Softmax(dim=1)\n","pred_probab = softmax(logits)"],"metadata":{"id":"K7qTp3ylyeUc","executionInfo":{"status":"ok","timestamp":1703606903702,"user_tz":-60,"elapsed":11,"user":{"displayName":"Mohsin mushtaq","userId":"02445327927298592193"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["print(f\"Model structure: {model}\\n\\n\")\n","\n","for name, param in model.named_parameters():\n","    print(f\"Layer: {name} | Size: {param.size()} | Values : {param[:2]} \\n\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9P-z9SvB4l9L","executionInfo":{"status":"ok","timestamp":1703607046578,"user_tz":-60,"elapsed":541,"user":{"displayName":"Mohsin mushtaq","userId":"02445327927298592193"}},"outputId":"9900b016-7295-4007-d3fa-1ffc83aff9c8"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Model structure: NeuralNetwork(\n","  (flatten): Flatten(start_dim=1, end_dim=-1)\n","  (linear_relu_stack): Sequential(\n","    (0): Linear(in_features=784, out_features=512, bias=True)\n","    (1): ReLU()\n","    (2): Linear(in_features=512, out_features=512, bias=True)\n","    (3): ReLU()\n","    (4): Linear(in_features=512, out_features=10, bias=True)\n","  )\n",")\n","\n","\n","Layer: linear_relu_stack.0.weight | Size: torch.Size([512, 784]) | Values : tensor([[ 0.0082,  0.0179,  0.0264,  ..., -0.0268,  0.0019,  0.0111],\n","        [ 0.0176,  0.0185, -0.0022,  ..., -0.0091, -0.0229, -0.0078]],\n","       device='cuda:0', grad_fn=<SliceBackward0>) \n","\n","Layer: linear_relu_stack.0.bias | Size: torch.Size([512]) | Values : tensor([0.0074, 0.0138], device='cuda:0', grad_fn=<SliceBackward0>) \n","\n","Layer: linear_relu_stack.2.weight | Size: torch.Size([512, 512]) | Values : tensor([[-0.0103,  0.0319, -0.0290,  ...,  0.0046, -0.0359, -0.0440],\n","        [-0.0207, -0.0268, -0.0195,  ..., -0.0327,  0.0389, -0.0074]],\n","       device='cuda:0', grad_fn=<SliceBackward0>) \n","\n","Layer: linear_relu_stack.2.bias | Size: torch.Size([512]) | Values : tensor([-0.0107,  0.0069], device='cuda:0', grad_fn=<SliceBackward0>) \n","\n","Layer: linear_relu_stack.4.weight | Size: torch.Size([10, 512]) | Values : tensor([[-0.0241,  0.0157, -0.0403,  ..., -0.0041, -0.0424, -0.0376],\n","        [-0.0036,  0.0069, -0.0017,  ...,  0.0035, -0.0136,  0.0349]],\n","       device='cuda:0', grad_fn=<SliceBackward0>) \n","\n","Layer: linear_relu_stack.4.bias | Size: torch.Size([10]) | Values : tensor([0.0112, 0.0123], device='cuda:0', grad_fn=<SliceBackward0>) \n","\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"0MT3I6_X5BZX"},"execution_count":null,"outputs":[]}]}